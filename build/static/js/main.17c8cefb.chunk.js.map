{"version":3,"sources":["componentes/LinkWrapper.js","componentes/Header.js","componentes/Tabela.js","componentes/Validator.js","componentes/PopUp.js","componentes/Formulario.js","componentes/ApiService.js","App.js","Sobre.js","componentes/DataTable.js","Livros.js","Autores.js","NotFound.js","serviceWorker.js","index.js"],"names":["LinkWrapper","props","activeStyle","fontWeight","Header","className","to","TableHead","TableBody","linhas","autores","map","linha","key","id","nome","livro","preco","onClick","removeAutor","Tabela","this","React","Component","FormValidator","validacoes","state","validacao","valido","forEach","regra","campoValor","campo","toString","args","metodo","validador","validoQuando","isInvalid","message","mensagem","isValid","popUp","exibeMensagem","status","M","toast","html","classes","displayLength","Formulario","inputFormulario","event","target","name","value","setState","submitForm","validator","valida","enviaForm","stateInicial","filter","elemento","PopUp","min","max","htmlFor","placeholder","type","onChange","ApiService","listaAutores","fetch","criaAutor","autor","method","headers","body","listaNomes","listaLivros","header","trataErro","res","ok","Error","responseText","json","App","atualizaAutor","then","catch","err","JSON","stringify","data","Sobre","href","DataTable","dados","item","colunas","coluna","titulo","Livros","livros","Autores","nomes","NotFound","Boolean","window","location","hostname","match","ReactDOM","render","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.17c8cefb.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst LinkWrapper = props => {\r\n    return (\r\n        <NavLink activeStyle={{fontWeight: \"bold\"}} {...props} />\r\n    )\r\n}\r\n\r\nexport default LinkWrapper;","import React from 'react';\r\nimport LinkWrapper from './LinkWrapper';\r\n\r\nconst Header = () => {\r\n    return(\r\n        <nav>\r\n        <div className=\"nav-wrapper indigo lighten-2\">\r\n          <LinkWrapper to=\"/\" className=\"brand-logo\">Livraria</LinkWrapper>\r\n          <ul className=\"right\">\r\n            <li><LinkWrapper to=\"/autores\">Autores</LinkWrapper></li>\r\n            <li><LinkWrapper to=\"/livros\">Livros</LinkWrapper></li>\r\n            <li><LinkWrapper to=\"/sobre\">Sobre</LinkWrapper></li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst TableHead = () => {\r\n    return(\r\n        <thead>\r\n            <tr>\r\n                <th>Autores</th>\r\n                <th>Livros</th>\r\n                <th>Pre√ßos</th>\r\n                <th>Remover</th>\r\n            </tr>\r\n        </thead>\r\n    )\r\n}\r\n\r\nconst TableBody = (props) => {\r\n    const linhas = props.autores.map( (linha) => {\r\n        return(\r\n            <tr key={linha.id}> \r\n                <td>{linha.nome}</td>\r\n                <td>{linha.livro}</td>\r\n                <td>{linha.preco}</td>\r\n                <td><button className=\"waves-effect waves-light btn indigo lighten-3\" onClick={() => {props.removeAutor(linha.id)}}>Remover</button></td>\r\n            </tr>\r\n        )\r\n    })\r\n\r\n    return(\r\n        <tbody>\r\n            {linhas}\r\n        </tbody>\r\n    )\r\n}\r\n\r\nclass Tabela extends React.Component{\r\n    render(){\r\n        const {autores, removeAutor} = this.props;\r\n        return (\r\n            <table className=\"centered highlight\">\r\n                <TableHead />\r\n                <TableBody autores = {autores} removeAutor = {removeAutor}/>\r\n            </table>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Tabela;","import validador from 'validator';\r\n\r\nclass FormValidator{\r\n\r\n    constructor(validacoes){\r\n        this.validacoes = validacoes;\r\n    }\r\n\r\n    valida(state){\r\n        let validacao = this.valido();\r\n\r\n        this.validacoes.forEach(regra => {\r\n\r\n            const campoValor = state[regra.campo.toString()];\r\n            const args = regra.args || [];\r\n            const metodoValidacao = typeof regra.metodo === 'string' ?\r\n            validador[regra.metodo] : regra.metodo;\r\n    \r\n            if(metodoValidacao(campoValor,...args, state) !== regra.validoQuando){\r\n                validacao[regra.campo] = {\r\n                    isInvalid:true,\r\n                    message: regra.mensagem\r\n                }\r\n\r\n                validacao.isValid = false;\r\n            };\r\n        });\r\n\r\n        return validacao;\r\n        \r\n       \r\n    }\r\n\r\n    valido() {\r\n        const validacao = {};\r\n\r\n        this.validacoes.map(regra => {\r\n            return validacao[regra.campo] = {isInvalid: false, message:\"\"}\r\n        });\r\n\r\n        return {isValid: true, ...validacao};\r\n    }\r\n}\r\n\r\nexport default FormValidator;","import M from 'materialize-css';\r\n\r\nconst popUp = {\r\n    exibeMensagem: (status, mensagem) => {\r\n\r\n        if(status === \"success\"){\r\n            M.toast({html: mensagem, classes: 'green', displayLength: 2000})\r\n        }\r\n\r\n        if(status === \"error\"){\r\n            M.toast({html: mensagem, classes: 'red', displayLength: 2000})\r\n        }\r\n    }\r\n}\r\n\r\nexport default popUp;","import React from 'react';\r\nimport FormValidator from './Validator';\r\nimport PopUp from './PopUp'\r\n\r\nclass Formulario extends React.Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.validator = new FormValidator([\r\n            {\r\n                campo:\"nome\",\r\n                metodo:\"isEmpty\",\r\n                validoQuando: false,\r\n                mensagem: \"Entre com um nome\"\r\n            },{\r\n                campo:\"livro\",\r\n                metodo:\"isEmpty\",\r\n                validoQuando: false,\r\n                mensagem: \"Entre com um livro\"\r\n            },{\r\n                campo:\"preco\",\r\n                metodo:\"isInt\",\r\n                args: [{min:0, max: 99999}],\r\n                validoQuando: true,\r\n                mensagem: \"Entre com um valor numerico\"\r\n            }\r\n        ]);\r\n        \r\n        this.stateInicial ={\r\n            nome:'',\r\n            livro:'',\r\n            preco:'',\r\n            validacao: this.validator.valido()\r\n        }\r\n\r\n        \r\n\r\n        this.state = this.stateInicial;\r\n    }\r\n    \r\n    inputFormulario = event => {\r\n        const {name,value} = event.target;\r\n\r\n        this.setState({\r\n            [name]:value\r\n        })\r\n    }\r\n\r\n    submitForm = () => {\r\n\r\n        const validacao = this.validator.valida(this.state)\r\n        if(validacao.isValid){\r\n            this.props.enviaForm(this.state);\r\n            this.setState(this.stateInicial);\r\n        }else{\r\n            const {nome, livro, preco} = validacao;\r\n            const campos = [nome, livro, preco];\r\n\r\n            const camposInvalidos= campos.filter(elemento => {\r\n                return elemento.isInvalid;\r\n            })\r\n            \r\n            camposInvalidos.forEach(campo => {\r\n                PopUp.exibeMensagem('error', campo.message);\r\n            });\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        const {nome,livro,preco} = this.state;\r\n\r\n        return(\r\n            <form>\r\n                <div className=\"row\">\r\n                    <div className=\"input-field col s4\">\r\n                        <label htmlFor=\"nome\"></label>\r\n                        <input\r\n                            placeholder=\"Nome\"\r\n                            id=\"nome\"\r\n                            type=\"text\"\r\n                            name=\"nome\"\r\n                            value={nome}\r\n                            onChange={this.inputFormulario}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-field col s4\">\r\n                        <label htmlFor=\"livro\"></label>\r\n                        <input\r\n                            placeholder=\"Livro\"\r\n                            id=\"livro\"\r\n                            type=\"text\"\r\n                            name=\"livro\"\r\n                            value={livro}\r\n                            onChange={this.inputFormulario}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-field col s4\">\r\n                        <label htmlFor=\"preco\"></label>\r\n                        <input\r\n                            placeholder=\"Pre√ßo\"\r\n                            id=\"preco\"\r\n                            type=\"text\"\r\n                            name=\"preco\"\r\n                            value={preco}\r\n                            onChange={this.inputFormulario}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <button className=\"waves-effect waves-light btn indigo lighten-3\" type=\"button\" onClick={this.submitForm}>Salvar</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Formulario;","const ApiService = {\r\n    listaAutores: () => {\r\n        return fetch('http://localhost:8000/api/autor');\r\n    },\r\n\r\n    criaAutor: autor => {\r\n        return fetch('http://localhost:8000/api/autor', {method: 'POST', headers: {'content-type': 'application/json'}, body: autor});\r\n    },\r\n\r\n    listaNomes: () => {\r\n        return fetch('http://localhost:8000/api/autor/nome');\r\n\r\n    },\r\n\r\n    listaLivros: () => {\r\n        return fetch('http://localhost:8000/api/autor/livro');\r\n    },\r\n\r\n    removeAutor: id => {\r\n        return fetch(`http://localhost:8000/api/autor/${id}`, {method: 'DELETE', header: {'content-type': 'application/json'}});\r\n    },\r\n\r\n    trataErro: res =>{\r\n        if(!res.ok){\r\n            throw new Error(res.responseText);\r\n        }\r\n        return res.json();\r\n    }\r\n\r\n}\r\nexport default ApiService;","import React from 'react';\nimport './css/App.css';\nimport './css/materialize.min.css';\n\nimport Header from './componentes/Header'\nimport Tabela from './componentes/Tabela';\nimport Formulario from './componentes/Formulario';\nimport PopUp from './componentes/PopUp';\nimport ApiService from './componentes/ApiService';\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props);\n    \n    this.state ={\n      autores:[],\n    }\n  }\n\n  removeAutor = id => {\n    const {autores} = this.state;\n    const atualizaAutor = autores.filter(autor => {\n      return autor.id !== id;\n    })\n    \n    ApiService.removeAutor(id)\n              .then(res => ApiService.trataErro(res))\n              .then(res => {\n                if(res.message === 'deleted'){\n                  this.setState({autores: [...atualizaAutor]});\n                  PopUp.exibeMensagem(\"error\", \"Autor removido com sucesso!\");\n                }\n              })\n              .catch(err => PopUp.exibeMensagem(\"error\", \"Erro em comunica√ß√£o com API ao remover autor.\"))\n    \n  }\n\n  enviaForm = autor => {\n    ApiService.criaAutor(JSON.stringify(autor))\n              .then(res => ApiService.trataErro(res))\n              .then(res => {\n                if(res.message === 'success'){\n                  this.setState({autores:[...this.state.autores, autor]});\n                  PopUp.exibeMensagem('success', \"Autor adicionado com sucesso!\")}\n              })\n              .catch(err => PopUp.exibeMensagem(\"error\", \"Erro em comunica√ß√£o com API ao adicionar autor.\"))\n              \n  }\n\n  componentDidMount(){\n    ApiService.listaAutores()\n              .then(res => ApiService.trataErro(res))\n              .then(res => {\n                if(res.message === 'success'){\n                  this.setState({autores: [...this.state.autores, ...res.data]})}\n              })\n              .catch(err => PopUp.exibeMensagem(\"error\", \"Erro em comunica√ß√£o com API ao tentar carregar a listagem.\"))\n  }\n  render(){ \n    \n    return (\n      <div className=\"App\">\n        <Header />\n        <div className=\"mb-10\">\n          <h1>Sistema de Cadastro</h1>\n          <Formulario enviaForm= {this.enviaForm}/>\n          <Tabela autores= {this.state.autores} removeAutor={this.removeAutor}/>\n        </div>\n      </div>\n    );}\n}\n\n\nexport default App;\n","import React from 'react';\r\nimport Header from './componentes/Header';\r\n\r\nclass Sobre extends React.Component {\r\n\r\n    render(){\r\n        return(\r\n            <div className='sobre'>\r\n                <Header />\r\n                <h1>Sobre</h1>\r\n                <p>Esta p√°gina representa um projeto criado por <a href=\"https://github.com/rcarnevale\">Rodrigo Carnevale</a>.</p>\r\n                <p>O objetivo √© criar uma SPA para cadastro de livros e autores de uma livraria. </p>\r\n                <p>Para ser testado completamente, √© necessaria a instala√ß√£o de uma api pr√≥pria dispon√≠vel juntamente com a build no <a href=\"https://github.com/rcarnevale/livraria-cadastro\">reposit√≥rio</a>.</p>\r\n                <p>Tamb√©m est√£o dispon√≠veis, no mesmo reposit√≥rio, alguns branches com o c√≥digo antes da build final, a fim de registrar o progresso.</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sobre;","import React from 'react';\r\n\r\nconst DataTable = (props) =>{\r\n\r\n    let linhas = props.dados.map(item =>\r\n        <tr>\r\n            {props.colunas.map(coluna =>\r\n                <td> {item[coluna]} </td>)}\r\n        </tr>\r\n        );\r\n\r\n    return(\r\n    <table className='centered highlight'>\r\n        <thead>\r\n            <tr>\r\n                <th>{props.titulo}</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {linhas}\r\n        </tbody>\r\n    </table>\r\n    );\r\n\r\n}\r\n\r\nexport default DataTable;","import React from 'react';\r\nimport Header from './componentes/Header';\r\nimport DataTable from './componentes/DataTable';\r\nimport ApiService from './componentes/ApiService';\r\nimport PopUp from './componentes/PopUp';\r\n\r\nclass Livros extends React.Component {\r\n\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            livros: [],\r\n            titulo: 'Livros'\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n      ApiService.listaLivros()\r\n                .then(res => ApiService.trataErro(res))\r\n                .then(res => {\r\n                  if(res.message === 'success'){\r\n                    this.setState({livros: [...this.state.livros, ...res.data]})}\r\n                  }\r\n                )\r\n                .catch(err => PopUp.exibeMensagem('error', \"Erro em comunica√ß√£o com API ao tentar carregar a listagem.\"))\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div className=\"livros\">\r\n                <Header />\r\n                <div className=\"mb-10\">\r\n                    <DataTable dados = {this.state.livros} titulo = {this.state.titulo} colunas = {[\"livro\"]} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Livros;","import React from 'react';\r\nimport Header from './componentes/Header';\r\nimport DataTable from './componentes/DataTable';\r\nimport ApiService from './componentes/ApiService';\r\nimport PopUp from './componentes/PopUp';\r\n\r\nclass Autores extends React.Component {\r\n\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            nomes: [],\r\n              titulo: 'Autores'\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n      ApiService.listaNomes()\r\n                .then(res => ApiService.trataErro(res))\r\n                .then(res => {\r\n                  if(res.message === 'success'){\r\n                    this.setState({nomes: [...this.state.nomes, ...res.data]})}\r\n                  }\r\n                )\r\n                .catch(err => PopUp.exibeMensagem('error', \"Erro em comunica√ß√£o com API ao tentar carregar a listagem.\"))\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div className=\"autores\">\r\n                <Header />\r\n                <div className=\"mb-10\">\r\n                    <DataTable dados = {this.state.nomes} titulo = {this.state.titulo} colunas = {[\"nome\"]} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Autores;","import React from 'react';\r\nimport Header from './componentes/Header';\r\n\r\nclass NotFound extends React.Component {\r\n\r\n    render(){\r\n        return(\r\n            <div className='not-found'>\r\n                <Header />\r\n                <h1>P√°gina n√£o encontrada</h1>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default NotFound;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\n\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\n\nimport App from './App';\nimport Sobre from './Sobre';\nimport Livros from './Livros';\nimport Autores from './Autores';\nimport NotFound from './NotFound';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <Switch>\n            <Route exact path='/' component={App} />\n            <Route path='/autores' component={Autores} />\n            <Route path='/livros' component={Livros} />\n            <Route path='/sobre' component={Sobre} />\n            <Route component={NotFound}></Route>\n        </Switch>\n    </BrowserRouter>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}